# .gitlab-ci.yml

# Specify the image to use for the job
image: node:18.17.1

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy    # New stage for deployment


# Job to build and push Docker image
docker-build:
  stage: build
  before_script:
    # Add Docker's official GPG key:
    - apt-get update
    - apt-get install coreutils
    - apt-get install -y ca-certificates curl
    - install -m 0755 -d /etc/apt/keyrings
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    - chmod a+r /etc/apt/keyrings/docker.asc

    # Add the repository to Apt sources:
    - echo \ "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \ $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \ tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt-get update
    - apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  script:
    - echo "Building Docker image..."
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - echo "Logging in to GitLab Docker registry..."
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "Pushing Docker image to GitLab registry..."
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  only:
    - main    # Run this job only on pushes to the main branch


# Job to run tests
unit-test-job:
  stage: test
  before_script:
    # Install dependencies
    - npm install

  script:
    - npm run dev&
    # Run unit tests with Vitest
    - npm run test:unit

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

